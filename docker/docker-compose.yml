version: '3'
services:
  coral-mysql80:
    image: mysql:8.0
    container_name: coral-mysql
    ports:
      - "3301:3306"
    command:
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
    volumes:
      - ./db/conf.d:/etc/mysql/conf.d
      - ./db/data:/var/lib/mysql
      - ./db/init-sql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: coral123456
    restart: always

  coral-mongodb:
    image: mongo
    container_name: coral-mongodb
    restart: always
    ports:
      - 27011:27017
    volumes:
      - "./mongodb/configdb:/data/configdb"
      - "./mongodb/db:/data/db"
      - /etc/localtime:/etc/localtime
    # command: mongod --auth
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root       #初始化管理员用户名和密码
      - MONGO_INITDB_ROOT_PASSWORD=123456
      - TZ="Asia/Shanghai"
    tty: true

  coral-mongo-express:
    image: mongo-express
    container_name: coral-mongo-express
    restart: always
    ports:
      - 8107:8081
    environment:
      ME_CONFIG_MONGODB_URL: "mongodb://root:123456@coral-mongodb:27017"

  coral-redis:
    #定义主机名
    container_name: coral-redis
    #使用的镜像；注意这里的版本要与第2步redis版本一致
    image: redis:6.0.6
    #容器的映射端口
    ports:
      - 6381:6379 #注意第二个端口必须是redis.conf中的端口号
    command: redis-server /etc/redis.conf
    #定义挂载点
    volumes:
      - ./data:/data #挂载/docker-compose/redis/data至容器
      - ./conf/redis.conf:/etc/redis.conf #挂载conf至容器
    privileged: true   #环境变量
    environment:
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8
    #docker 重启后，容器自启动
    restart: always

  coral:
    build:
      context: coral-fe
      dockerfile: Dockerfile
    container_name: coral-fe
    ports:
      - "8106:8080"
    volumes:
      - ./coral/storage:/storage
      - ./coral/logs:/logs
      - ./coral/backup:/backup
      - /etc/localtime:/etc/localtime
    depends_on:
      - coral-mysql80
    restart: always